#!/usr/bin/env bash
# cdn: DEPLOY_SERVER=xxx app_api_base=xxx/api app_cors_prefix=cdnxxx user_pwd=xxx
# apionly: DEPLOY_SERVER=xxx app_cors_prefix=3rdxxx user_pwd=xxx
set -o errexit

scripts_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd "$scripts_dir"

export user_name=${user_name:-adm}
export user_pwd=${user_pwd:-123456}
export app_name=${app_name:-modlogie}
export app_port=${app_port:-443}
export app_version=${app_version:-latest}
export db_pwd=${db_pwd:-123456}
export data_root=${data_root:-$HOME/data}
export docker_user=${docker_user:-modoth}
export server_types=${server_types:-"cs_netcore"}

if [[ -n "$DEPLOY_SERVER" ]]; then
    ssh -nNT -L $PWD/docker.sock:/var/run/docker.sock $DEPLOY_SERVER &
    ssh_pid=$!
    sleep 1
    trap "kill $ssh_pid || true; rm $PWD/docker.sock" EXIT
    export DOCKER_HOST=unix://$PWD/docker.sock
fi

deploy_dir="$scripts_dir/build/${app_name}"

if [[ "docker-compose" == "$1" ]]; then
    shift
    cd "$deploy_dir" && docker-compose $@
    exit
fi

( cd "$deploy_dir" && docker-compose down || true )

rm -rf "$deploy_dir" || true
mkdir -p "$deploy_dir"

if [[ -d "./.local.certs/${app_name}" && -f "./.local.certs/${app_name}/cert.pem" ]]; then
    cp ./.local.certs/${app_name}/* "$deploy_dir"
fi

if [[ -n "$app_cors_prefix" && -z "$app_api_base" ]]; then
    export client_image_name="nginx"
    cat default.conf_cors | sed -e "s;app_cors_prefix;$app_cors_prefix;g" >  "$deploy_dir"/default.conf
    export app_cross_site_cookie="true"
else
    export client_image_name="${docker_user}/modlogie_client:${app_version}"
    cp default.conf "$deploy_dir"
    export app_cross_site_cookie="false"
fi
cp Dockerfile.* "$deploy_dir"
if [[ -n "$app_api_base" ]];then
    cat ENVOVERRIDE.Dockerfile.web | sed -e "s;app_api_base;$app_api_base;g" >> "$deploy_dir/Dockerfile.web"
fi
cat docker-compose_fixed.yml > "$deploy_dir"/docker-compose.yml
cat envoy_fixed.yaml > "$deploy_dir"/envoy.yaml
if [[ -n "$app_cors_prefix" ]]; then
    cat envoy_fixed.yaml_cors | sed -e "s;app_cors_prefix;$app_cors_prefix;g" >>  "$deploy_dir"/envoy.yaml
fi
cat envoy_fixed.yaml_end >> "$deploy_dir"/envoy.yaml

for type in $server_types
do
 cat docker-compose_flex.yml | sed -e "s/SERVER_TYPE/$type/g" >> "$deploy_dir"/docker-compose.yml
 cat envoy_flex.yaml | sed -e "s/SERVER_TYPE/$type/g" >>  "$deploy_dir"/envoy.yaml
done

cd "$deploy_dir"
if [ ! -f 'cert.pem' ];then
    openssl req -new -newkey rsa:4096 -nodes -keyout cert.key -out cert.csr -subj '/CN=localhost' -config <(printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")
    openssl x509 -req -sha256 -days 1 -in cert.csr -signkey cert.key -out cert.pem
fi
if [[ -n "$@" ]]; then
    cd "$deploy_dir" && docker-compose $@
    exit
fi
docker-compose pull
docker-compose up -d --build
